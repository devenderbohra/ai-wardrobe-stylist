// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// NextAuth.js required models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // User profile data
  age           Int?
  gender        String?
  styleProfile  String? // JSON string of style preferences
  photos        String? // JSON string of photo URLs
  
  accounts      Account[]
  sessions      Session[]
  clothingItems ClothingItem[]
  outfits       Outfit[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Application models
model ClothingItem {
  id              String   @id @default(cuid())
  userId          String
  name            String
  category        String
  type            String?
  imageUrl        String
  thumbnailUrl    String?
  colors          String   // JSON array
  primaryColor    String
  style           String
  season          String   // JSON array
  tags            String   // JSON array
  brand           String?
  sourceUrl       String?
  dateAdded       DateTime @default(now())
  wearCount       Int      @default(0)
  isFavorite      Boolean  @default(false)
  aiAnalysis      String?  // JSON string
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  outfitItems OutfitItem[]
  
  @@index([userId])
  @@index([category])
}

model Outfit {
  id          String   @id @default(cuid())
  userId      String
  name        String?
  occasion    String
  imageUrl    String?
  confidence  Float?
  reasoning   String?
  styleScore  Float?
  colorHarmony Float?
  createdAt   DateTime @default(now())
  isFavorite  Boolean  @default(false)
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  items OutfitItem[]
  
  @@index([userId])
  @@index([occasion])
}

model OutfitItem {
  id             String @id @default(cuid())
  outfitId       String
  clothingItemId String
  
  outfit       Outfit       @relation(fields: [outfitId], references: [id], onDelete: Cascade)
  clothingItem ClothingItem @relation(fields: [clothingItemId], references: [id], onDelete: Cascade)
  
  @@unique([outfitId, clothingItemId])
}